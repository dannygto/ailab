version: '3.8'

services:
  # 前端服务
  frontend:
    build:
      context: ../src/frontend
      dockerfile: ../../docker/frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - ailab-network

  # 后端服务
  backend:
    build:
      context: ../src/backend
      dockerfile: ../../docker/backend/Dockerfile
    ports:
      - "3001:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - MONGODB_URI=mongodb://${MONGO_APP_USERNAME}:${MONGO_APP_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=${MONGO_INITDB_DATABASE}
      - REDIS_URL=redis://redis:6379
      - INITIALIZATION_FILE_PATH=/app/data/initialization.json
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    volumes:
      - backend_logs:/app/logs
      - initialization_data:/app/data
    networks:
      - ailab-network

  # MongoDB数据库
  mongodb:
    image: mongo:6.0
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_APP_USERNAME=${MONGO_APP_USERNAME}
      - MONGO_APP_PASSWORD=${MONGO_APP_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      - ailab-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ailab-network

  # 监控服务
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - ailab-network

  # 可视化监控
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ailab-network

networks:
  ailab-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  backend_logs:
  prometheus_data:
  grafana_data:
  initialization_data:
